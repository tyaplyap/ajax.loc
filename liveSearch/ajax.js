	$(document).ready(function(){
				
		// Обработчик события keyup, сработает после того как пользователь отпустит кнопку, после ввода чего-либо в поле поиска.
		// Полю поиска мы присвоили id="search"
		// может быть такая запись $('#search').keyup(function(){}
				
		$('#search').on('keyup', function(){ 
					
			// Присваиваем значение из поля поиска с id="search", переменной 'search'
			// Может быть такая запись var search = $('#search').val();
				
			var search = $(this).val();
					
			// Проверяем, что значение переменной search не является пустым и кол-во символов больше одного
					
			if((search !== '') && (search.length > 1)){
						
				// Если условие true, вызываем функцию ajax
						
				$.ajax({
							
					// (или type: 'POST') - Указываем, что будем обращатся к серверу через метод 'POST'
					// есть также другие методы отправки запроса на сервер: GET, POST, PUT, PATCH, DELETE;
							
					method: 'POST', 
							
					// адрес, по кот. получим POST данные, обработаем и вернем ответ с html-кодом.
					// Можно динамически формировать url с переменными из php: '/emplyees/' + переменная php
					// Переменную php нужно обернуть в теги php, также как при вставке в html
							
					url: '/liveSearch/handler.php', 
							
					// В этом объекте, добавляем данные, которые хотим отправить на сервер
					// Свойству name присваиваем значение из переменной search
					// В обработчике ajaxHandler.php, нам будут доступны эти данные в массиве S_POST['name']
					// Похожим образом работает атрибут action в теге form
							
					data: {
						'name': search
					},
							
					// Если ajax запрос выполнен успешно, т.е. данные ушли в обработчик /ajaxHandler.php,
					// и обработчик вернул обновленный участок html-кода,
					// то ответ из /ajaxHandler.php помещаем в переменную handlerRespose
							
					success: function(handlerRespose){
								
						// Если handlerRespose не пустая, подставим данные в контейнер для результатов поиска
						// в div c id="display-handler-respose"
						// Иначе, скроем результаты
								
						if(handlerRespose != ''){
							$('#display-handler-respose').html(handlerRespose).show(); // вместо show можно fadeIn();
						} else{
							$('#display-handler-respose').html(handlerRespose).hide(); // вместо hide можно fadeOut();
						} 
					}
				});
						
					// Если значение переменной search пустое или кол-во символов меньше одного
					// скрываем результаты и ничего не отдаем в контейнер для результатов поиска
						
			} else{
				$('#display-handler-respose').html('').hide();
			}
		});
		
		// Ниже можно дописывать дополнительные функции, которые будут работать с результатами поиска
		// Например, по клику подставлять данные в форму поиска
		// Эта функция вставит только имя, т.е. ту часть, кот. обрамлена тегами span
		// Если в форму добавить теги form, указать action, а в инпут добавить атрибут name, то
		// можно дополнительно написать код обработки post-данных, пришедших уже непосредственно с формы
		$(document).on('click', '.search-results li span', function(){
			$('#search').val($(this).text());
			$('#display-handler-respose').html('').hide();
			return false;
		});
	});
	
	